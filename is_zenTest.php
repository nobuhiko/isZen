<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-03-27 at 18:10:59.
 */
class is_zenTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var is_zen
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new is_zen;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * Generated from @assert ('文字列です。') === true.
     *
     * @covers is_zen::is_zen_strlen
     */
    public function testIs_zen_strlen()
    {
        $this->assertSame(
          true,
          $this->object->is_zen_strlen('文字列です。')
        );
    }

    /**
     * Generated from @assert ('abcd1234+:;!') === false.
     *
     * @covers is_zen::is_zen_strlen
     */
    public function testIs_zen_strlen2()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_strlen('abcd1234+:;!')
        );
    }

    /**
     * Generated from @assert ('全角abcd') === false.
     *
     * @covers is_zen::is_zen_strlen
     */
    public function testIs_zen_strlen3()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_strlen('全角abcd')
        );
    }

    /**
     * Generated from @assert ('半角ｶﾅ') === false.
     *
     * @covers is_zen::is_zen_strlen
     */
    public function testIs_zen_strlen4()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_strlen('半角ｶﾅ')
        );
    }

    /**
     * Generated from @assert ('文字列です。') === true.
     *
     * @covers is_zen::is_zen_preg_match
     */
    public function testIs_zen_preg_match()
    {
        $this->assertSame(
          true,
          $this->object->is_zen_preg_match('文字列です。')
        );
    }

    /**
     * Generated from @assert ('abcd1234+:;!') === false.
     *
     * @covers is_zen::is_zen_preg_match
     */
    public function testIs_zen_preg_match2()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_preg_match('abcd1234+:;!')
        );
    }

    /**
     * Generated from @assert ('全角abcd') === false.
     *
     * @covers is_zen::is_zen_preg_match
     */
    public function testIs_zen_preg_match3()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_preg_match('全角abcd')
        );
    }

    /**
     * Generated from @assert ('半角ｶﾅ') === false.
     *
     * @covers is_zen::is_zen_preg_match
     */
    public function testIs_zen_preg_match4()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_preg_match('半角ｶﾅ')
        );
    }

    /**
     * Generated from @assert ('文字列です。') === true.
     *
     * @covers is_zen::is_zen_mb_substr
     */
    public function testIs_zen_mb_substr()
    {
        $this->assertSame(
          true,
          $this->object->is_zen_mb_substr('文字列です。')
        );
    }

    /**
     * Generated from @assert ('abcd1234+:;!') === false.
     *
     * @covers is_zen::is_zen_mb_substr
     */
    public function testIs_zen_mb_substr2()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_mb_substr('abcd1234+:;!')
        );
    }

    /**
     * Generated from @assert ('全角abcd') === false.
     *
     * @covers is_zen::is_zen_mb_substr
     */
    public function testIs_zen_mb_substr3()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_mb_substr('全角abcd')
        );
    }

    /**
     * Generated from @assert ('半角ｶﾅ') === false.
     *
     * @covers is_zen::is_zen_mb_substr
     */
    public function testIs_zen_mb_substr4()
    {
        $this->assertSame(
          false,
          $this->object->is_zen_mb_substr('半角ｶﾅ')
        );
    }
}
